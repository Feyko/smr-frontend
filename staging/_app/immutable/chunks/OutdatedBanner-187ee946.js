import{S as w,i as y,s as $,d as b,v as k,e as B,h as O,j as E,k as u,ac as f,n as S,p as v,x as h}from"./vendor-71586dff.js";import{C as r}from"./graphql-587ea9ba.js";const C="src/lib/components/mods/compatibility/OutdatedBanner.svelte";function d(i){let t;const e={c:function(){t=B("div"),this.h()},l:function(a){t=O(a,"DIV",{class:!0}),E(t).forEach(u),this.h()},h:function(){f(t,"class",i[0]),S(t,C,36,0,1011)},m:function(a,s){v(a,t,s)},p:function(a,[s]){s&1&&f(t,"class",a[0])},i:h,o:h,d:function(a){a&&u(t)}};return b("SvelteRegisterBlock",{block:e,id:d.name,type:"component",source:"",ctx:i}),e}function x(i,t,e){let{$$slots:n={},$$scope:a}=t;k("OutdatedBanner",n,[]);let{compatibility:s}=t,{logo:l=!1}=t;function m(o){const p=o.EA.state;return p==r.Broken?p:p==r.Works||o.EXP.state!=r.Works?o.EXP.state:p}let c="";if(s){const o=m(s);switch(c+="mod-outdated-stripe",o){case r.Broken:c+=" mod-broken";break;case r.Damaged:c+=" mod-damaged";break}}l&&(c+=" mod-logo-outdated");const g=["compatibility","logo"];return Object.keys(t).forEach(o=>{!~g.indexOf(o)&&o.slice(0,2)!=="$$"&&o!=="slot"&&console.warn(`<OutdatedBanner> was created with unknown prop '${o}'`)}),i.$$set=o=>{"compatibility"in o&&e(1,s=o.compatibility),"logo"in o&&e(2,l=o.logo)},i.$capture_state=()=>({CompatibilityState:r,compatibility:s,logo:l,Worst:m,CSSClass:c}),i.$inject_state=o=>{"compatibility"in o&&e(1,s=o.compatibility),"logo"in o&&e(2,l=o.logo),"CSSClass"in o&&e(0,c=o.CSSClass)},t&&"$$inject"in t&&i.$inject_state(t.$$inject),[c,s,l]}class W extends w{constructor(t){super(t),y(this,t,x,d,$,{compatibility:1,logo:2}),b("SvelteRegisterComponent",{component:this,tagName:"OutdatedBanner",options:t,id:d.name});const{ctx:e}=this.$$,n=t.props||{};e[1]===void 0&&!("compatibility"in n)&&console.warn("<OutdatedBanner> was created without expected prop 'compatibility'")}get compatibility(){throw new Error("<OutdatedBanner>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set compatibility(t){throw new Error("<OutdatedBanner>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}get logo(){throw new Error("<OutdatedBanner>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}set logo(t){throw new Error("<OutdatedBanner>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'")}}export{W as O};
//# sourceMappingURL=OutdatedBanner-187ee946.js.map
