{"version":3,"file":"CompatibilityButton-54697b29.js","sources":["../../../../../../src/lib/components/mods/compatibility/OutdatedBanner.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityStateText.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityInfo.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityIcon.svelte","../../../../../../src/lib/components/mods/compatibility/CompatibilityButton.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import { CompatibilityState } from '$lib/generated';\n\n  export let compatibility: CompatibilityInfoInput;\n  export let logo = false;\n\n  function Worst(compatibility: CompatibilityInfoInput): CompatibilityState {\n    const EA = compatibility.EA.state;\n    if (EA == CompatibilityState.Broken) {\n      // Broken is always the worst\n      return EA;\n    }\n    if (EA == CompatibilityState.Works) {\n      return compatibility.EXP.state; // Anything other than Works is worse\n    }\n    if (compatibility.EXP.state != CompatibilityState.Works) {\n      // If it's not better then it is the worst\n      return compatibility.EXP.state;\n    }\n    return EA;\n  }\n\n  let worst = CompatibilityState.Works;\n  if (compatibility) {\n    worst = Worst(compatibility);\n  }\n  const works = worst === CompatibilityState.Works;\n</script>\n\n{#if !works}\n  <div\n    class=\"mod-outdated-stripe\"\n    class:mod-damaged={worst === CompatibilityState.Damaged}\n    class:mod-broken={worst === CompatibilityState.Broken}\n    class:mod-logo-outdated={logo}\n  />\n{/if}\n","<script lang=\"ts\">\n  import type { CompatibilityState } from '$lib/generated';\n  export let state: CompatibilityState;\n\n  function classForState(state: CompatibilityState): string {\n    return `mod-state-${state.toString().toLowerCase()}`;\n  }\n</script>\n\n<p class=\"{classForState(state)} mod-state\">{state}</p>\n","<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import CompatibilityStateText from '$lib/components/mods/compatibility/CompatibilityStateText.svelte';\n\n  export let compatibility: CompatibilityInfoInput;\n</script>\n\n{#if compatibility}\n  <div>Early Access: <CompatibilityStateText state={compatibility.EA.state} /></div>\n  {#if compatibility.EA.note}\n    Note: {compatibility.EA.note}\n  {/if}\n  <div>Experimental: <CompatibilityStateText state={compatibility.EXP.state} /></div>\n  {#if compatibility.EXP.note}\n    Note: {compatibility.EXP.note}\n  {/if}\n{/if}\n","<script lang=\"ts\">\n  import type { CompatibilityInput } from '$lib/generated';\n  import { CompatibilityState } from '$lib/generated';\n\n  export let compatibility!: CompatibilityInput;\n  export let EXP = false;\n  let iconText = 'public';\n  if (EXP) {\n    iconText = 'science';\n  }\n</script>\n\n<p\n  class=\"material-icons\"\n  class:mod-state-works={compatibility.state === CompatibilityState.Works}\n  class:mod-state-damaged={compatibility.state === CompatibilityState.Damaged}\n  class:mod-state-broken={compatibility.state === CompatibilityState.Broken}\n>\n  {iconText}\n</p>\n","<script lang=\"ts\">\n  import type { CompatibilityInfoInput } from '$lib/generated';\n  import Dialog, { Content, Title } from '@smui/dialog';\n  import CompatibilityInfo from '$lib/components/mods/compatibility/CompatibilityInfo.svelte';\n  import Button from '@smui/button';\n  import CompatibilityIcon from './CompatibilityIcon.svelte';\n  let open = false;\n\n  export let compatibility: CompatibilityInfoInput;\n</script>\n\n{#if compatibility}\n  <Button\n    title=\"Compatibility information\"\n    on:click={() => {\n      open = true;\n    }}\n  >\n    <CompatibilityIcon compatibility={compatibility.EA} />\n    <CompatibilityIcon compatibility={compatibility.EXP} EXP={true} />\n  </Button>\n\n  <Dialog bind:open>\n    <Title>Compatibility Information</Title>\n    <Content>\n      <CompatibilityInfo {compatibility} />\n    </Content>\n  </Dialog>\n{/if}\n"],"names":["ctx","CompatibilityState","Damaged","Broken","insert_hydration_dev","target","div","anchor","create_if_block","if_block","p","dirty","compatibility","$$props","logo","EA","state","Works","EXP","worst","Worst","works","attr_dev","p_class_value","classForState","toString","toLowerCase","note","create_if_block_2","create_if_block_1","div0","div1","set_data_dev","t1","t1_value","toggle_class","iconText","compatibilityicon0_changes","compatibilityicon1_changes","open","$$invalidate"],"mappings":"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"}