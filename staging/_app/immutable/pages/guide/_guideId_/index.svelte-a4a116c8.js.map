{"version":3,"file":"index.svelte-a4a116c8.js","sources":["../../../../../../../../src/lib/components/guides/GuideInfo.svelte","../../../../../../../../src/lib/components/guides/GuideAuthor.svelte","../../../../../../../../src/routes/guide/[guideId]/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import type { Guide } from '$lib/generated';\n  import Card, { Content } from '@smui/card';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  export let guide!: Pick<Guide, 'created_at'>;\n</script>\n\n<Card>\n  <Content>\n    <div class=\"text-lg\">\n      <h3 class=\"text-2xl my-4 font-bold\">Info</h3>\n      <span><strong>Created:</strong> {prettyDate(guide.created_at)}</span><br />\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\">\n  import type { User } from '$lib/generated';\n  import { base } from '$app/paths';\n  import Card, { Content } from '@smui/card';\n\n  export let author: Pick<User, 'id' | 'username' | 'avatar'>;\n</script>\n\n<Card>\n  <Content>\n    <div class=\"grid grid-flow-row gap-y-2\">\n      <h3 class=\"text-2xl my-4 font-bold\">Author</h3>\n\n      <div class=\"grid auto-rows-min text-lg gap-y-4\">\n        <div class=\"grid grid-flow-col auto-cols-min gap-x-4\">\n          <div class=\"rounded-full bg-cover w-14 h-14\" style={`background-image: url(\"${author.avatar}\")`} />\n          <div class=\"grid grid-flow-row\">\n            <a href=\"{base}/user/{author.id}/\" class=\"text-yellow-500 underline\">{author.username}</a>\n            <div>Writer</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Content>\n</Card>\n","<script lang=\"ts\" context=\"module\">\n  import { paramsToProps } from '$lib/utils/routing';\n  import { operationStore } from '@urql/svelte';\n  import { GetGuideDocument } from '$lib/generated';\n  import { loadWaitForNoFetch } from '$lib/utils/gql';\n\n  const guideQ = operationStore(GetGuideDocument, { guide: undefined });\n\n  export const load = paramsToProps(async (input) => {\n    guideQ.variables.guide = input.params.guideId;\n    return loadWaitForNoFetch({\n      guide: guideQ\n    })(input);\n  });\n</script>\n\n<script lang=\"ts\">\n  import { mutation } from '@urql/svelte';\n  import { DeleteGuideDocument } from '$lib/generated';\n  import GuideInfo from '$lib/components/guides/GuideInfo.svelte';\n  import GuideAuthor from '$lib/components/guides/GuideAuthor.svelte';\n  import { user } from '$lib/stores/user';\n  import { goto } from '$app/navigation';\n  import { writable } from 'svelte/store';\n  import Toast from '$lib/components/general/Toast.svelte';\n  import { markdown } from '$lib/utils/markdown';\n  import { base } from '$app/paths';\n  import Dialog, { Title, Content as DialogContent } from '@smui/dialog';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import Button from '@smui/button';\n\n  export let guideId!: string;\n  export let guide: typeof guideQ;\n\n  let errorMessage = '';\n  let errorToast = false;\n\n  const deleteGuide = mutation({\n    query: DeleteGuideDocument\n  });\n\n  $: canUserEdit = $user?.roles?.deleteContent || $user?.id === $guide?.data?.getGuide?.user?.id;\n\n  const deleteDialogOpen = writable<boolean>(false);\n\n  const deleteGuideFn = () => {\n    deleteGuide({ guideId }).then((value) => {\n      if (value.error) {\n        console.error(value.error.message);\n        errorMessage = 'Error deleting guide: ' + value.error.message;\n        errorToast = true;\n      } else {\n        // TODO Toast or something\n        goto(base + '/guides');\n      }\n    });\n  };\n\n  $: if (!errorToast) {\n    errorMessage = '';\n  }\n</script>\n\n<svelte:head>\n  {#if !$guide.fetching && !$guide.error && $guide.data.getGuide}\n    <MetaDescriptors description={$guide.data.getGuide.short_description} title={$guide.data.getGuide.name} />\n  {/if}\n</svelte:head>\n\n{#if $guide.fetching}\n  <p>Loading...</p>\n{:else if $guide.error}\n  <p>Oh no... {$guide.error.message}</p>\n{:else if $guide.data.getGuide}\n  <div class=\"grid gap-6 xlx:grid-flow-row\">\n    <div class=\"flex flex-wrap h-auto justify-between items-center\">\n      <h1 class=\"text-4xl  font-bold\">{$guide.data.getGuide.name}</h1>\n\n      <div>\n        {#if canUserEdit}\n          <Button variant=\"outlined\" on:click={() => goto(base + '/guide/' + guideId + '/edit')}>Edit</Button>\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(true)}>Delete</Button>\n        {/if}\n      </div>\n    </div>\n    <div class=\"grid grid-auto-max auto-cols-fr gap-4\">\n      <Card class=\"h-fit\">\n        <Content>\n          <div class=\"markdown-content break-words\">\n            {#await markdown($guide.data.getGuide.guide) then guideRendered}\n              <p>{@html guideRendered}</p>\n            {/await}\n          </div>\n        </Content>\n      </Card>\n      <div class=\"grid grid-cols-1 auto-rows-min gap-8\">\n        <GuideInfo guide={$guide.data.getGuide} />\n        <GuideAuthor author={$guide.data.getGuide.user} />\n      </div>\n    </div>\n  </div>\n\n  {#if canUserEdit}\n    <Dialog bind:open={$deleteDialogOpen}>\n      <Title>Delete Guide?</Title>\n      <DialogContent>\n        <div class=\"grid grid-flow-row gap-4\">\n          <span>Are you sure you wish to delete this guide</span>\n\n          <Button variant=\"outlined\" on:click={() => deleteDialogOpen.set(false)}>Cancel</Button>\n          <Button variant=\"outlined\" on:click={() => deleteGuideFn()}>Delete</Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  {/if}\n\n  <Toast bind:running={errorToast}>\n    <span>{errorMessage}</span>\n  </Toast>\n{:else}\n  <!-- TODO Better 404 -->\n  404\n{/if}\n"],"names":["prettyDate","ctx","created_at","insert_hydration_dev","target","div","anchor","append_hydration_dev","h3","span","strong","br","set_data_dev","t4","t4_value","guide","$$props","t3_value","username","attr_dev","div0","div0_style_value","avatar","base","id","div5","div4","div3","div2","a","div1","dirty","t3","author","description","data","getGuide","short_description","title","name","metadescriptors_changes","t0_value","create_if_block_4","user","create_if_block_3","h1","current","t0","guideauthor_changes","error","message","p","t1","t1_value","innerHTML","raw_value","handle_promise","promise","markdown","info","fetching","create_if_block_5","guideQ","operationStore","GetGuideDocument","undefined","load","paramsToProps","async","variables","input","params","guideId","loadWaitForNoFetch","errorMessage","errorToast","deleteGuide","mutation","query","DeleteGuideDocument","deleteDialogOpen","writable","deleteGuideFn","then","value","console","$$invalidate","goto","click_handler","set","$deleteDialogOpen","canUserEdit","$user","roles","deleteContent","$guide"],"mappings":"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"}