{"version":3,"file":"index.svelte-a58b7416.js","sources":["../../../../../../../src/routes/settings/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { mutation } from '@urql/svelte';\n  import { UpdateUserDocument } from '$lib/generated';\n  import Toast from '$lib/components/general/Toast.svelte';\n  import { goto } from '$app/navigation';\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { svelteReporter, ValidationMessage } from '@felte/reporter-svelte';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { user } from '$lib/stores/user';\n  import * as zod from 'zod';\n  import type { Form } from '@felte/core';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import Textfield from '@smui/textfield';\n  import type { Writable } from 'svelte/store';\n  import Button from '@smui/button';\n\n  let errorMessage = '';\n  let errorToast = false;\n\n  const updateUser = mutation({\n    query: UpdateUserDocument\n  });\n\n  export const userSchema = zod.object({\n    avatar: zod.optional(zod.any().refine((logo) => 'name' in logo && 'size' in logo && 'type' in logo)),\n    username: zod.string().min(3).max(32)\n  });\n\n  let form: Form<{ [key: string]: string }>['form'];\n  let data: Writable<{ username: string }>;\n\n  $: {\n    if ($user) {\n      const createdForm = createForm({\n        initialValues: {\n          username: $user.username\n        },\n        extend: [validator, svelteReporter],\n        validateSchema: userSchema,\n        onSubmit: (submitted: { username: string; avatar: unknown }) => {\n          updateUser({\n            user: trimNonSchema(submitted, userSchema),\n            userId: $user.id\n          }).then((value) => {\n            if (value.error) {\n              console.error(value.error.message);\n              errorMessage = 'Error editing guide: ' + value.error.message;\n              errorToast = true;\n            } else {\n              // TODO Toast or something\n              goto(base + '/user/' + value.data.updateUser.id);\n            }\n          });\n        }\n      });\n\n      form = createdForm.form;\n      data = createdForm.data;\n    }\n  }\n\n  $: if (!errorToast) {\n    errorMessage = '';\n  }\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Change your user settings\" title=\"Settings\" />\n</svelte:head>\n\n<h1 class=\"text-4xl my-4 font-bold\">Settings</h1>\n\n<Card>\n  <Content>\n    {#if $user === null}\n      <p>Please log in</p>\n    {:else}\n      <form use:form>\n        <div class=\"grid grid-flow-row gap-6\">\n          <div class=\"grid grid-flow-row gap-2\">\n            <label for=\"avatar\">Avatar:</label>\n            <input\n              id=\"avatar\"\n              class=\"base-input\"\n              name=\"avatar\"\n              type=\"file\"\n              accept=\"image/png,image/jpeg,image/gif\"\n              placeholder=\"Avatar\" />\n            <ValidationMessage for=\"avatar\" let:messages={message}>\n              <span class=\"validation-message\">{message || ''}</span>\n            </ValidationMessage>\n          </div>\n\n          <div class=\"grid grid-flow-row gap-2\">\n            <Textfield bind:value={$data.username} label=\"Username\" required />\n            <ValidationMessage for=\"username\" let:messages={message}>\n              <span class=\"validation-message\">{message || ''}</span>\n            </ValidationMessage>\n          </div>\n\n          <div>\n            <Button type=\"submit\" variant=\"outlined\">Save</Button>\n          </div>\n        </div>\n      </form>\n    {/if}\n  </Content>\n</Card>\n\n<Toast bind:running={errorToast}>\n  <span>{errorMessage}</span>\n</Toast>\n"],"names":["message","ctx","username","textfield_props","value","insert_hydration_dev","target","form_1","anchor","append_hydration_dev","div3","div0","label","input","div1","div2","textfield_changes","p","t_value","span","dirty","set_data_dev","t","h1","errorMessage","errorToast","updateUser","mutation","query","UpdateUserDocument","userSchema","zod.object","avatar","zod.optional","zod.any","refine","logo","zod.string","min","max","form","data","$$self","$$","not_equal","$data","$user","createdForm","createForm","initialValues","extend","validator","svelteReporter","validateSchema","onSubmit","submitted","user","trimNonSchema","userId","id","then","error","console","$$invalidate","goto","base"],"mappings":"gnCA2F0DA,KAAO,EAAA,GAAAA,CAAAA,cAAPA,KAAOA,EAAA,KAAA,CAAA,CAAA,8FAM9B,AAAAC,KAAMC,WAAAA,QAANC,IAAAC,MAAAH,KAAMC,wIACmBF,KAAO,EAAA,GAAAA,eAAPA,KAAOA,EAAA,KAAA,CAAA,CAAA,mNAfnC,SAAA,0SAAA,iyBAH1BK,CAAAA,EA2BMC,EAAAC,EAAAC,CA1BJC,EAAAA,EAyBKF,EAAAG,CAxBHD,EAAAA,EAYKC,EAAAC,CAAAA,EAXHF,EAAkCE,EAAAC,iBAClCH,EAMwBE,EAAAE,6BAM1BJ,EAKKC,EAAAI,CAAAA,wCAELL,EAEKC,EAAAK,CAAAA,0JARoBC,EAAAZ,MAAAH,KAAMC,2iBAnBhC,eAAA,yDAAA,eAAA,uEAAHG,CAAAA,EAAmBC,EAAAW,EAAAT,CAAAA,+KAcuBU,EAAAjB,QAAW,IAAE,2NAA/CI,CAAAA,EAAsDC,EAAAa,EAAAX,2BAApB,AAAAY,EAAA,MAAAF,IAAAA,GAAAjB,QAAW,IAAE,KAAAoB,EAAAC,EAAAJ,uMAObA,EAAAjB,QAAW,IAAE,2NAA/CI,CAAAA,EAAsDC,EAAAa,EAAAX,2BAApB,AAAAY,EAAA,MAAAF,IAAAA,GAAAjB,QAAW,IAAE,KAAAoB,EAAAC,EAAAJ,CAAAA,CAAAA,iOAKR,6BAAA,MAAA,CAAA,+PA3B5C,CAAA,MAAAjB,QAAU,KAAI,w/BAoCdA,EAAY,EAAA,4DAAZA,EAAY,2EAAnBI,EAA0BC,EAAAa,EAAAX,CAAAA,mCAAnBP,EAAY,oaADAA,EAAU,KAAA,mBAAVA,EAAU,8HAvCK,UAAA,kNAAA,4MAApCI,EAAAA,EAAgDC,EAAAiB,EAAAf,uMAuC3BP,EAAU,ogBA7FzB,CAAA,EAAA,GAAAuB,GAAe,GACfC,EAAa,GAEX,KAAAC,GAAaC,GACjB,CAAAC,MAAOC,EAAAA,CAAAA,EAGIC,EAAaC,GAAU,CAClCC,OAAQC,GAAaC,GAAAA,EAAUC,OAAQC,GAAS,QAAUA,IAAQ,QAAUA,IAAQ,QAAUA,EAC9FlC,CAAAA,EAAAA,SAAUmC,GAAaC,EAAAA,IAAI,CAAGC,EAAAA,IAAI,SAGhCC,GACAC,oKAiE6B,AAAAC,EAAAC,GAAAC,UAAAC,EAAM3C,SAAQE,CAAAA,GAAdyC,GAAM3C,SAAQE,yBAe5BqB,CAAAA,EAAUrB,ykBA7EvB0C,EAAK,CACD,KAAAC,GAAcC,GAAU,CAC5BC,cACE,CAAA/C,SAAU4C,EAAM5C,QAElBgD,EAAAA,OAAM,CAAGC,GAAWC,IACpBC,eAAgBvB,EAChBwB,SAAWC,GAAAA,CACT7B,EAAU,CACR8B,KAAMC,GAAcF,EAAWzB,CAC/B4B,EAAAA,OAAQZ,EAAMa,EAAAA,CAAAA,EACbC,KAAMxD,GAAAA,CACH,AAAAA,EAAMyD,MACRC,SAAQD,MAAMzD,EAAMyD,MAAM7D,OAAAA,EAC1B+D,EAAA,EAAAvC,EAAe,wBAA0BpB,EAAMyD,MAAM7D,OAAAA,EACrD+D,EAAA,EAAAtC,EAAa,EAAA,GAGbuC,GAAKC,GAAO,SAAW7D,EAAMqC,KAAKf,WAAWiC,aAMrDnB,EAAOO,EAAYP,YACnBC,EAAOM,EAAYN,qBAIfhB,IACNsC,EAAA,EAAAvC,EAAe"}