{"version":3,"file":"TagList-1b26b6fa.js","sources":["../../../../../../src/lib/components/utils/TagList.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { GetTagsDocument } from '$lib/generated/graphql';\n  import type { Tag } from '$lib/generated/graphql';\n  import Chip, { Set, Text } from '@smui/chips';\n  import MenuSurface from '@smui/menu-surface';\n  import { operationStore, query } from '@urql/svelte';\n  import type { MenuSurfaceComponentDev } from '@smui/menu-surface/src/MenuSurface.types';\n  import Textfield, { Input } from '@smui/textfield';\n  import FloatingLabel from '@smui/floating-label';\n  import LineRipple from '@smui/line-ripple';\n  import type { InputComponentDev } from '@smui/textfield';\n  import type { LineRippleComponentDev } from '@smui/line-ripple';\n\n  const getAllTags = operationStore(GetTagsDocument);\n\n  export let tags: Tag[] = [];\n  export let editable = false;\n\n  let inputA: InputComponentDev;\n  let lineRippleA: LineRippleComponentDev;\n\n  const shake = false;\n\n  let allTags: Tag[] = [];\n  let filteredTagsMatched: Tag[] = [];\n  let filteredTagsUnmatched: Tag[] = [];\n\n  let newTagText = '';\n\n  let newTag: HTMLInputElement;\n  let newTagContainer: HTMLElement = null;\n  let surface: MenuSurfaceComponentDev;\n\n  let focused = false;\n\n  $: newTag = inputA?.getElement();\n\n  function filterAvailableTags(tagList: Tag[], currentTags: Tag[], filterText: string): [Tag[], Tag[]] {\n    if (!tagList || !currentTags || !filterText) {\n      return [tagList, []];\n    }\n    console.log(filterText);\n    filterText = filterText.toLowerCase();\n    let unfiltered = tagList.filter((tag) => !currentTags.find((t) => t.id == tag.id));\n    const filtered = unfiltered.filter((tag) => !newTag || tag.name.toLowerCase().includes(filterText));\n    unfiltered = unfiltered.filter((tag) => filtered.findIndex((t) => t.id === tag.id) === -1);\n    return [filtered, unfiltered];\n  }\n\n  function updateTags() {\n    tags = tags;\n    [filteredTagsMatched, filteredTagsUnmatched] = filterAvailableTags(allTags, tags, newTagText);\n  }\n\n  if (editable) {\n    query(getAllTags);\n    getAllTags.subscribe(() => {\n      if (!getAllTags.fetching && !getAllTags.error) {\n        allTags = getAllTags.data.getTags;\n        updateTags();\n      }\n    });\n  }\n\n  function addTag(newTagObj: string | Tag) {\n    if (!allTags) {\n      return false;\n    }\n    const tagToAdd = allTags.find((tag) => {\n      if (typeof newTagObj == 'string') {\n        return newTagObj == tag.name || newTagObj == tag.id;\n      } else {\n        return newTagObj.id == tag.id;\n      }\n    }) as Tag;\n    if (tagToAdd && !tags.find((tag) => tag.id == tagToAdd.id)) {\n      tags.push(tagToAdd);\n      updateTags();\n      return true;\n    }\n    updateTags();\n    return false;\n  }\n\n  function deleteTag(tag: Tag) {\n    tags = tags.filter((v) => v != tag);\n    updateTags();\n  }\n\n  function onFocusLost() {\n    setTimeout(() => {\n      if (newTagContainer && !newTagContainer.contains(document.activeElement)) {\n        surface.setOpen(false);\n      }\n    }, 200);\n  }\n\n  function onInput(e) {\n    //on:input is thrown before the inner text of the input is updated.\n    // The following if-else ensure the text we search with is up-to-date\n    if (e.data) {\n      newTagText += e.data;\n    } else {\n      newTagText = newTagText.substring(0, newTagText.length - 1);\n    }\n    updateTags();\n    e.preventDefault();\n  }\n  updateTags();\n</script>\n\n<div class=\"\" on:focusin={() => (focused = true)} on:focusout={() => (focused = false)}>\n  {#if !editable}\n    {#if tags.length > 0}\n      <div class=\"flex flex-row flex-wrap text-sm gap-1\">\n        {#each tags as tag}\n          <div class=\"text-neutral-300 lowercase\">\n            <span class=\"text-orange-500\">#</span>{tag.name}\n          </div>\n        {/each}\n      </div>\n    {/if}\n  {:else}\n    <Textfield class=\"tags overflow-scroll\" bind:lineRipple={lineRippleA} bind:input={inputA} style=\"z-index: 9999\">\n      <FloatingLabel\n        class=\"pb-2\"\n        for=\"input-manual-a\"\n        slot=\"label\"\n        floatAbove={(newTag && newTag.value.length > 0) || focused || tags.length > 0}>\n        Tags\n      </FloatingLabel>\n      <div class=\"flex flex-row flex-wrap text-sm gap-1 mr-2\">\n        {#each tags as tag}\n          <div class=\"text-neutral-300 flex removable-tag\">\n            <span class=\"hashtag text-orange-500\">#</span>\n            <span class=\"cancel\">\n              <i class=\"material-icons mdc-chip__icon mdc-chip__icon--trailing\" on:click={() => deleteTag(tag)}\n                >cancel</i>\n            </span>\n            <p>{tag.name}</p>\n          </div>\n        {/each}\n        <div\n          id=\"newTagContainer\"\n          class=\"text-neutral-300 flex\"\n          bind:this={newTagContainer}\n          on:focusin={() => surface.setOpen(true)}\n          on:focusout={onFocusLost}>\n          <MenuSurface bind:this={surface} managed={true} anchorCorner=\"BOTTOM_LEFT\" anchorElement={newTag}>\n            <div style=\"margin: 1rem\">\n              <h1>Available Tags</h1>\n              {#if filteredTagsMatched.length > 0}\n                <div class=\"flex flex-nowrap m-1\">\n                  <Set chips={filteredTagsMatched} let:chip key={(tag) => tag.name}>\n                    <Chip {chip} on:SMUIChip:interaction={() => addTag(chip.name)}>\n                      <Text>{chip.name}</Text>\n                    </Chip>\n                  </Set>\n                </div>\n              {/if}\n              {#if filteredTagsUnmatched.length > 0}\n                <div class=\"flex flex-nowrap m-1\">\n                  <Set class=\"unmatched-tag\" chips={filteredTagsUnmatched} let:chip key={(tag) => tag.name}>\n                    <Chip {chip} on:SMUIChip:interaction={() => addTag(chip.name)}>\n                      <Text>{chip.name}</Text>\n                    </Chip>\n                  </Set>\n                </div>\n              {/if}\n            </div>\n          </MenuSurface>\n          {#if focused}\n            <span class=\"text-orange-500\">#</span>\n          {/if}\n          <Input\n            id=\"input-manual-a\"\n            spellcheck=\"false\"\n            autocomplete=\"off\"\n            class=\"inline text-sm text-neutral-300 {shake ? 'shake' : ''}\"\n            style=\"height: initial\"\n            bind:this={inputA}\n            bind:value={newTagText}\n            on:input={onInput} />\n        </div>\n      </div>\n      <LineRipple bind:this={lineRippleA} slot=\"ripple\" />\n    </Textfield>\n  {/if}\n</div>\n\n<style lang=\"scss\">\n  .removable-tag {\n    .cancel {\n      display: none;\n      cursor: pointer;\n\n      i {\n        padding: 0;\n        margin: 0;\n      }\n    }\n\n    &:hover {\n      .hashtag {\n        display: none;\n      }\n\n      .cancel {\n        display: initial;\n      }\n    }\n  }\n\n  .tags {\n    max-width: 50%;\n  }\n</style>\n"],"names":["ctx","length","create_if_block_1","t4_value","name","insert_hydration","target","div","anchor","append_hydration","span0","span1","i","p","dirty","set_data","t4","t_value","t","create_if_block_4","create_if_block_3","h1","span","create_if_block_2","div1","div0","floatAbove","value","floatinglabel_changes","t1_value","t1","tag","getAllTags","operationStore","GetTagsDocument","tags","$$props","editable","inputA","lineRippleA","allTags","filteredTagsMatched","filteredTagsUnmatched","newTagText","newTag","newTagContainer","surface","focused","tagList","currentTags","filterText","console","log","toLowerCase","unfiltered","filter","find","id","filtered","includes","findIndex","updateTags","filterAvailableTags","$$invalidate","query","subscribe","fetching","error","data","getTags","newTagObj","tagToAdd","push","v","onFocusLost","setTimeout","contains","document","activeElement","setOpen","e","substring","preventDefault","$$value","click_handler","deleteTag","addTag","chip","focusin_handler_1","focusout_handler","getElement"],"mappings":"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"}